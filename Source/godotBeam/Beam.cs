using Beamable.Api;
using Beamable.Api.Auth;
using Beamable.Api.Autogenerated;
using Beamable.Common.Api;
using Beamable.Common.Api.Auth;
using Beamable.Common.Dependencies;
using Beamable.Config;
using Beamable.Connection;
using UnityEngine;

namespace GodotBeamable.BeamGodot
{
	public static class Beam
	{
		public static readonly IDependencyBuilder DependencyBuilder;
		static Beam()
		{
			Debug.Instance = new GodotUnityLogger();
			ConfigDatabase.Init();
			DependencyBuilder = new DependencyBuilder();
			DependencyBuilder.AddSingleton<IDeviceIdResolver, DefaultDeviceIdResolver>();
			DependencyBuilder.AddSingleton<IPlatformRequesterHostResolver, EnvironmentData>();
			DependencyBuilder.AddSingleton<IAuthSettings,DefaultAuthSettings>();
			DependencyBuilder.AddSingleton<IAuthApi, AuthApi>();
			DependencyBuilder.AddSingleton<IBeamableRequester, GodotRequester>(
				provider => provider.GetService<GodotRequester>());
			DependencyBuilder.AddSingleton<IPlatformRequester, GodotRequester>(
				provider => provider.GetService<GodotRequester>());
			DependencyBuilder.AddSingleton<GodotRequester, GodotRequester>();
			
			DependencyBuilder.AddSingleton<IBeamableConnection, WebSocketConnection>();
			DependencyBuilder.AddSingleton<BeamableSubscriptionManager>();
			OpenApiRegistration.RegisterOpenApis(DependencyBuilder);
		}
	}
}